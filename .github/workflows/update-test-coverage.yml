name: Update Tests Coverage

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    name: PHP test coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create coverage directory
        run: |
          mkdir -p /var/www/html/coverage
          chmod -R 777 /var/www/html/coverage

      - name: Run PHPUnit tests and generate coverage report
        run: vendor/bin/phpunit

      - name: debug dir
        run: pwd && ls -la

      - name: Generate coverage badge
        id: badge
        run: |
          COVERAGE=$(grep -E 'Lines:' /var/www/html/coverage.txt | awk '{print $2}') | tr -d '%'
          echo "Coverage: $COVERAGE"

          COLOR="gray"
          if (( $(echo "$COVERAGE < 50" | bc -l) )); then
            COLOR="red"
          elif (( $(echo "$COVERAGE >= 50 && $COVERAGE < 80" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE >= 80 && $COVERAGE < 90" | bc -l) )); then
            COLOR="green"
          elif (( $(echo "$COVERAGE >= 90" | bc -l) )); then
            COLOR="brightgreen"
          fi

          cd ..
          BADGE_MARKDOWN="![Coverage Badge](https://img.shields.io/badge/Coverage-${COVERAGE}%25-${COLOR}.svg)"
          sed -i "s|!\[Coverage Badge\](.*)|$BADGE_MARKDOWN|g" README.md

      - name: Commit coverage badge
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ../README.md
          if ! git diff-index --quiet HEAD --; then
            git commit -m "Update coverage badge to $COVERAGE%"
            git push
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}